Процедура ОбработкаПроведения(Отказ,Режим)
	
	// код по старой методике контроля остатков
	
	Движения.АктивныеПосещения.Записывать = Истина;
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктивныеПосещенияОстатки.ВидАттракциона,
	|	АктивныеПосещенияОстатки.КоличествоПосещенийОстаток
	|ИЗ
	|	РегистрНакопления.АктивныеПосещения.Остатки(, Основание = &Основание) КАК АктивныеПосещенияОстатки";
	
	Запрос.УстановитьПараметр("Основание", Основание);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОсталосьПосещений = 0;
	ВидАттракционаНоменклатуры = Неопределено;
	
	Если Выборка.Следующий() Тогда
		
		ОсталосьПосещений = Выборка.КоличествоПосещенийОстаток;
		ВидАттракционаНоменклатуры = Выборка.ВидАттракциона;
		
	КонецЕсли;
	
	Если ОсталосьПосещений < 1 Тогда
		
		Отказ = Истина; // То есть запрещаем проведение документа
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Билет уже использован";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Основание"; 
		Сообщение.Сообщить();
		
	КонецЕсли;
	
	ВидАттракционаВДокументе = ПолучениеВидаАттракциона(Аттракцион);
	
	Если ЗначениеЗаполнено(ВидАттракционаНоменклатуры) 
		И ВидАттракционаВДокументе <> ВидАттракционаНоменклатуры Тогда
			
		// ВидАттракционаВДокументе всегда либо "Детский", либо "Взрослый"
		// ВидАттракционаНоменклатуры может быть пустым (т.е для любого аттракциона)
		// Соответственно, если значения заполнены, но не равны, то билет не подходит.
		// (например: ВДокументе - Взрослый, а Номенклатуры - Детский) 
		
		Отказ = Истина; // То есть запрещаем проведение документа
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Билет не подходит для данного аттракциона";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Основание"; 
		Сообщение.Сообщить();
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	Иначе
		Движения.АктивныеПосещения.Записывать = Истина;
		Движение = Движения.АктивныеПосещения.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Основание = Основание;
		Движение.ВидАттракциона = ВидАттракционаНоменклатуры;
		Движение.КоличествоПосещений = 1;
	КонецЕсли;
	
	// код по новой методике контроля остатков	
//	// регистр АктивныеПосещения
//	Движения.АктивныеПосещения.Записывать = Истина;
//	Движение = Движения.АктивныеПосещения.Добавить();
//	Движение.Период = Дата;
//	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
//	Движение.Основание = Основание;
//	Движение.ВидАттракциона = ПолучениеВидаАттракциона(Аттракцион);
//	Движение.КоличествоПосещений = 1;
//	
//	// Записываем изменения при проведении
//	Движения.Записать();
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	АктивныеПосещенияОстатки.Основание
//	|ИЗ
//	|	РегистрНакопления.АктивныеПосещения.Остатки(, Основание = &Основание) КАК АктивныеПосещенияОстатки
//	|ГДЕ
//	|	АктивныеПосещенияОстатки.КоличествоПосещенийОстаток < 0";
//	
//	Запрос.УстановитьПараметр("Основание", Основание);
//	
//	Если НЕ Запрос.Выполнить().Пустой() Тогда
//		Отказ = Истина; // То есть запрещаем проведение документа
//		Сообщение = Новый СообщениеПользователю();
//		Сообщение.Текст = "Билет уже был использован ранее";
//		Сообщение.УстановитьДанные(ЭтотОбъект);
//		Сообщение.Поле = "Основание"; 
//		Сообщение.Сообщить();
//	КонецЕсли;
 
КонецПроцедуры

Функция ПолучениеВидаАттракциона(Аттракцион) // Получаем реквизит ВидАттракциона из справочника Аттракционы
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Аттракционы.ВидАттракциона
	|ИЗ
	|	Справочник.Аттракционы КАК Аттракционы
	|ГДЕ
	|	Аттракционы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Аттракцион);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ВидАттракциона;
	
КонецФункции